/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.wishyHub.WebServer.User;



/**
 *
 * @author maninderpal
 */

import com.wishyHub.WebServer.Uploader.FileDetail;
import com.wishyHub.WebServer.repository.UserRepository;
import com.wishyHub.WebServer.repository.uploadRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;


//@Controller    // This means that this class is a Controller
@RestController
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class UserController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
//@Qualifier("userRepository")
        private UserRepository userRepository;
        public uploadRepository uploadRepo;

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}

        @GetMapping(path="/file") // Map ONLY GET Requests
	public @ResponseBody String addFile (@RequestParam String name
			, @RequestParam Integer size, @RequestParam String type, @RequestParam Integer userid) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

	FileDetail file = new FileDetail();
        file.setName(name);
        file.setSize(size);
        file.setType(type);
        file.setUserid(userid);
        uploadRepo.save(file);

        return "success file store in DB";
	}
	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
      
      
}